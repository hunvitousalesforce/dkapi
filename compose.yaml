# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
      target: final
    ports:
      - 8080:8080

    # The commented out section below is an example of how to define a PostgreSQL
    # database that your application can use. `depends_on` tells Docker Compose to
    # start the database before your application. The `db-data` volume persists the
    # database data between container restarts. The `db-password` secret is used
    # to set the database password. You must create `db/password.txt` and add
    # a password of your choosing to it before running `docker compose up`.
    depends_on:
      mydb:
        condition: service_healthy

    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_CONNECTION: Host=${DB_HOST}; Port=${DB_PORT}; Database=${DB_NAME}; User ID=${DB_USER}; Password=${DB_PASS};

    networks:
      - mynet

  mydb:
    image: postgres
    restart: always
    user: ${DB_USER}
    # secrets:
    #   - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASS}
      # - POSTGRES_USER=postgres
      # - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    # expose:
    #   - 5432
    ports:
      - 5500:5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mynet

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "8009:80"
    networks:
      - mynet

volumes:
  db-data:
  pgadmin-data:

networks:
  mynet:
# secrets:
#   db-password:
#     file: db/password.txt
